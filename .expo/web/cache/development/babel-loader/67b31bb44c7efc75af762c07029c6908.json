{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Card, Overlay, SearchBar } from 'react-native-elements';\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { ProductPage } from \"../pages/ProductPage\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProductStack = createNativeStackNavigator();\nexport function Product(_ref) {\n  var item = _ref.item;\n  var navigation = useNavigation();\n\n  var onClickItem = function onClickItem(postId) {\n    navigation.navigate('ProductPage', {\n      postId: postId\n    });\n  };\n\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return onClickItem(item.postId);\n    },\n    children: _jsxs(Card, {\n      containerStyle: styles.cardCnt,\n      children: [_jsx(Card.Image, {\n        style: {\n          borderRadius: 30\n        },\n        source: {\n          uri: \"\" + item.img\n        }\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.cardText,\n          children: item.details\n        })\n      }), _jsx(View, {\n        children: _jsxs(Text, {\n          children: [item.price, \"\\u0E3F / \\u0E27\\u0E31\\u0E19\"]\n        })\n      })]\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  cardCnt: {\n    borderWidth: 0,\n    shadowColor: 'rgba(0,0,0, 0.0)',\n    shadowOffset: {\n      height: 0,\n      width: 0\n    },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n    elevation: 0,\n    backgroundColor: 'transparent'\n  },\n  cardText: {\n    textAlign: 'left',\n    fontWeight: 'bold'\n  },\n  contentText: {\n    textAlign: 'left',\n    fontWeight: 'bold',\n    padding: 5,\n    fontSize: 18,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Card","Overlay","SearchBar","createNativeStackNavigator","ProductPage","useNavigation","ProductStack","Product","item","navigation","onClickItem","postId","navigate","styles","cardCnt","borderRadius","uri","img","cardText","details","price","StyleSheet","create","borderWidth","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","elevation","backgroundColor","textAlign","fontWeight","contentText","padding","fontSize","color"],"sources":["D:/EquipmentBorrowingSystemApp/components/Product.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    StyleSheet\r\n} from 'react-native';\r\n\r\nimport { Card, Overlay, SearchBar } from 'react-native-elements';\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { ProductPage } from '../pages/ProductPage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nconst ProductStack = createNativeStackNavigator();\r\nexport function Product({ item }) {\r\n    const navigation = useNavigation();\r\n    const onClickItem = postId => {\r\n        // console.log(postId);\r\n        navigation.navigate('ProductPage', {\r\n            postId: postId\r\n        });\r\n    };\r\n    return (\r\n        <TouchableOpacity onPress={() => onClickItem(item.postId)}>\r\n            <Card containerStyle={styles.cardCnt}>\r\n                <Card.Image\r\n                    style={{ borderRadius: 30 }}\r\n                    // source={{ uri: `http://192.168.0.104:8080/getImg?imgUrl=${item.img}` }} />\r\n                    source={{ uri: `${item.img}` }}\r\n                />\r\n                <View>\r\n                    <Text style={styles.cardText}>{item.details}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text>{item.price}฿ / วัน</Text>\r\n                </View>\r\n            </Card>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    cardCnt: {\r\n        borderWidth: 0,\r\n        shadowColor: 'rgba(0,0,0, 0.0)', // Remove Shadow for iOS\r\n        shadowOffset: { height: 0, width: 0 },\r\n        shadowOpacity: 0,\r\n        shadowRadius: 0,\r\n        elevation: 0, // Remove Shadow for Android\r\n        backgroundColor: 'transparent',\r\n    },\r\n    cardText: {\r\n        textAlign: 'left',\r\n        fontWeight: 'bold',\r\n    },\r\n    contentText: {\r\n        textAlign: 'left',\r\n        fontWeight: 'bold',\r\n        padding: 5,\r\n        fontSize: 18,\r\n        color: 'white',\r\n    },\r\n\r\n});"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAQA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,SAAxB,QAAyC,uBAAzC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,WAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AACA,IAAMC,YAAY,GAAGH,0BAA0B,EAA/C;AACA,OAAO,SAASI,OAAT,OAA2B;EAAA,IAARC,IAAQ,QAARA,IAAQ;EAC9B,IAAMC,UAAU,GAAGJ,aAAa,EAAhC;;EACA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM,EAAI;IAE1BF,UAAU,CAACG,QAAX,CAAoB,aAApB,EAAmC;MAC/BD,MAAM,EAAEA;IADuB,CAAnC;EAGH,CALD;;EAMA,OACI,KAAC,gBAAD;IAAkB,OAAO,EAAE;MAAA,OAAMD,WAAW,CAACF,IAAI,CAACG,MAAN,CAAjB;IAAA,CAA3B;IAAA,UACI,MAAC,IAAD;MAAM,cAAc,EAAEE,MAAM,CAACC,OAA7B;MAAA,WACI,KAAC,IAAD,CAAM,KAAN;QACI,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAhB,CADX;QAGI,MAAM,EAAE;UAAEC,GAAG,OAAKR,IAAI,CAACS;QAAf;MAHZ,EADJ,EAMI,KAAC,IAAD;QAAA,UACI,KAAC,IAAD;UAAM,KAAK,EAAEJ,MAAM,CAACK,QAApB;UAAA,UAA+BV,IAAI,CAACW;QAApC;MADJ,EANJ,EASI,KAAC,IAAD;QAAA,UACI,MAAC,IAAD;UAAA,WAAOX,IAAI,CAACY,KAAZ;QAAA;MADJ,EATJ;IAAA;EADJ,EADJ;AAiBH;AAAA;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC7BR,OAAO,EAAE;IACLS,WAAW,EAAE,CADR;IAELC,WAAW,EAAE,kBAFR;IAGLC,YAAY,EAAE;MAAEC,MAAM,EAAE,CAAV;MAAaC,KAAK,EAAE;IAApB,CAHT;IAILC,aAAa,EAAE,CAJV;IAKLC,YAAY,EAAE,CALT;IAMLC,SAAS,EAAE,CANN;IAOLC,eAAe,EAAE;EAPZ,CADoB;EAU7Bb,QAAQ,EAAE;IACNc,SAAS,EAAE,MADL;IAENC,UAAU,EAAE;EAFN,CAVmB;EAc7BC,WAAW,EAAE;IACTF,SAAS,EAAE,MADF;IAETC,UAAU,EAAE,MAFH;IAGTE,OAAO,EAAE,CAHA;IAITC,QAAQ,EAAE,EAJD;IAKTC,KAAK,EAAE;EALE;AAdgB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}