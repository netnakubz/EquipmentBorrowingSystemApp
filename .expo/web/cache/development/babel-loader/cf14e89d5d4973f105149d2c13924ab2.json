{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Chat from \"../components/Chat\";\nimport axios from \"axios\";\nimport { Card } from 'react-native-paper';\nvar screenWidth = Dimensions.get('window').width;\nimport { GestureHandlerRootView, Swipeable } from 'react-native-gesture-handler';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Room(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rooms = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useState3 = useState(10001),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedValue = _useState4[0],\n      setSelectedValue = _useState4[1];\n\n  var deleteBtn = function deleteBtn() {\n    console.log(\"delete\");\n  };\n\n  var muteBtn = function muteBtn() {\n    console.log(\"mute\");\n  };\n\n  var renderLeftActions = function renderLeftActions(progress, dragX) {\n    var trans = dragX.interpolate({\n      inputRange: [0, 50, 100, 101],\n      outputRange: [0, 0, 0, 1]\n    });\n    return _jsxs(View, {\n      style: styles.rightBtn,\n      children: [_jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return deleteBtn();\n          },\n          style: {\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n            transform: [{\n              translateX: trans\n            }]\n          },\n          children: _jsx(View, {\n            style: {\n              width: 60,\n              height: 40,\n              backgroundColor: \"#FF0031\",\n              borderRadius: 30,\n              justifyContent: 'center'\n            },\n            children: _jsx(Text, {\n              style: {\n                textAlign: \"center\",\n                margin: 'auto',\n                color: 'white',\n                fontSize: 18,\n                fontWeight: \"bold\"\n              },\n              children: \"\\u0E25\\u0E1A\"\n            })\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return muteBtn();\n          },\n          style: {\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n            transform: [{\n              translateX: trans\n            }]\n          },\n          children: _jsx(View, {\n            style: {\n              width: 50,\n              height: 40,\n              backgroundColor: \"#FED15C\",\n              borderRadius: 30,\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: _jsx(Ionicons, {\n              name: \"notifications-off-outline\",\n              size: 18\n            })\n          })\n        })\n      })]\n    });\n  };\n\n  var getListChat = function getListChat() {\n    var data;\n    return _regeneratorRuntime.async(function getListChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://192.168.0.104:8080/api/v1/getListChat?userId=\" + selectedValue));\n\n          case 2:\n            data = _context.sent;\n            setRoom(data.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getListChat();\n  }, [selectedValue]);\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: _jsx(View, {\n      children: _jsx(GestureHandlerRootView, {\n        children: rooms.map(function (room, index) {\n          return _jsx(Swipeable, {\n            renderRightActions: renderLeftActions,\n            children: _jsx(Chat, {\n              props: room,\n              user: selectedValue,\n              navigation: navigation\n            })\n          }, index);\n        })\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  col: {\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n  card: {\n    padding: 10\n  },\n  chatName: {\n    fontWeight: 'bold'\n  },\n  rightBtn: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Chat","axios","Card","screenWidth","Dimensions","get","width","GestureHandlerRootView","Swipeable","Ionicons","Room","navigation","rooms","setRoom","selectedValue","setSelectedValue","deleteBtn","console","log","muteBtn","renderLeftActions","progress","dragX","trans","interpolate","inputRange","outputRange","styles","rightBtn","flex","alignItems","justifyContent","transform","translateX","height","backgroundColor","borderRadius","textAlign","margin","color","fontSize","fontWeight","getListChat","data","map","room","index","StyleSheet","create","row","flexDirection","flexWrap","col","card","padding","chatName"],"sources":["D:/EquipmentBorrowingSystemApp/pages/Room.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, ScrollView, Image, Button, Text, TouchableOpacity, Dimensions } from \"react-native\";\r\nimport Chat from \"../components/Chat\";\r\nimport axios from \"axios\";\r\nimport { Card } from 'react-native-paper';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nimport { GestureHandlerRootView, Swipeable } from 'react-native-gesture-handler';\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nexport default function Room({ navigation }) {\r\n    const [rooms, setRoom] = useState([]);\r\n    const [selectedValue, setSelectedValue] = useState(10001);\r\n    const deleteBtn = () => {\r\n        console.log(\"delete\")\r\n    }\r\n    const muteBtn = () => {\r\n        console.log(\"mute\");\r\n    }\r\n    const renderLeftActions = (progress, dragX) => {\r\n        const trans = dragX.interpolate({\r\n            inputRange: [0, 50, 100, 101],\r\n            outputRange: [0, 0, 0, 1],\r\n        });\r\n        return (\r\n            <View style={styles.rightBtn}>\r\n                <View>\r\n                    <TouchableOpacity\r\n                        onPress={() => deleteBtn()}\r\n                        style={{\r\n                            flex: 1,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            transform: [{ translateX: trans }]\r\n                        }}\r\n                    >\r\n                        <View style={{\r\n                            width: 60,\r\n                            height: 40,\r\n                            backgroundColor: \"#FF0031\",\r\n                            borderRadius: 30,\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    textAlign: \"center\",\r\n                                    margin: 'auto',\r\n                                    color: 'white',\r\n                                    fontSize: 18,\r\n                                    fontWeight: \"bold\"\r\n                                }}\r\n                            >\r\n                                ลบ\r\n                            </Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View>\r\n                    <TouchableOpacity\r\n                        onPress={() => muteBtn()}\r\n                        style={{\r\n                            flex: 1,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            transform: [{ translateX: trans }]\r\n                        }}\r\n                    >\r\n                        <View style={{\r\n                            width: 50,\r\n                            height: 40,\r\n                            backgroundColor: \"#FED15C\",\r\n                            borderRadius: 30,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center'\r\n                        }}>\r\n                            <Ionicons name=\"notifications-off-outline\" size={18} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View >\r\n            </View >\r\n        );\r\n    }\r\n    const getListChat = async () => {\r\n        const data = await axios.get(\r\n            `http://192.168.0.104:8080/api/v1/getListChat?userId=${selectedValue}`\r\n        );\r\n        setRoom(data.data);\r\n    };\r\n    useEffect(() => {\r\n        getListChat();\r\n    }, [selectedValue]);\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n            <View>\r\n                <GestureHandlerRootView>\r\n                    {rooms.map((room, index) => (\r\n                        <Swipeable\r\n                            key={index}\r\n                            renderRightActions={renderLeftActions}\r\n                        >\r\n                            <Chat\r\n                                props={room}\r\n                                user={selectedValue}\r\n                                navigation={navigation}\r\n                            />\r\n                        </Swipeable>\r\n                    ))}\r\n                </GestureHandlerRootView>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    row: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n    },\r\n    col: {\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n    },\r\n    card: {\r\n        padding: 10,\r\n    },\r\n    chatName: {\r\n        fontWeight: 'bold',\r\n    },\r\n    rightBtn: {\r\n        flexDirection: 'row'\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}