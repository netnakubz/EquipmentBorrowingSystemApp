{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Card, Overlay, SearchBar } from 'react-native-elements';\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { ProductPage } from \"../pages/ProductPage\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProductStack = createNativeStackNavigator();\nexport function ProductLend(_ref) {\n  var item = _ref.item;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usedColors = _useState2[0],\n      setUsedColors = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var onClickItem = function onClickItem(postId) {\n    navigation.navigate('DirectMessage', {\n      postId: postId\n    });\n  };\n\n  function generateRandomColor() {\n    var colors = [\"#FAC7C0\", \"#FFDB94\", \"#CAE3D4\", \"#F0D7C4\", \"#B9E4E7\", \"#FFCADD\"];\n    var randNumber = Math.floor(Math.random() * colors.length);\n    return colors[randNumber];\n  }\n\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return onClickItem(item.postId);\n    },\n    children: _jsxs(Card, {\n      containerStyle: [styles.cardCnt, {\n        backgroundColor: generateRandomColor()\n      }],\n      children: [_jsx(Card.Title, {\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"\\u0E2B\\u0E32\\u0E40\\u0E21\\u0E32\\u0E2A\\u0E4C\\u0E44\\u0E23\\u0E49\\u0E2A\\u0E32\\u0E22\"\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          children: \"50 THB \\u0E15\\u0E48\\u0E2D\\u0E27\\u0E31\\u0E19\"\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          children: \"\\u0E42\\u0E1E\\u0E2A\\u0E15\\u0E4C\\u0E40\\u0E21\\u0E37\\u0E48\\u0E2D ...\"\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          children: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\"\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            textAlign: 'right'\n          },\n          children: \"\\u0E40\\u0E0A\\u0E48\\u0E32 2 \\u0E27\\u0E31\\u0E19\"\n        })\n      })]\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  cardCnt: {\n    borderWidth: 0,\n    shadowColor: 'rgba(0,0,0, 0.0)',\n    shadowOffset: {\n      height: 0,\n      width: 0\n    },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n    elevation: 0,\n    borderRadius: 30\n  },\n  cardText: {\n    textAlign: 'left',\n    fontWeight: 'bold'\n  },\n  contentText: {\n    textAlign: 'left',\n    fontWeight: 'bold',\n    padding: 5,\n    fontSize: 18,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Card","Overlay","SearchBar","createNativeStackNavigator","ProductPage","useNavigation","ProductStack","ProductLend","item","usedColors","setUsedColors","navigation","onClickItem","postId","navigate","generateRandomColor","colors","randNumber","Math","floor","random","length","styles","cardCnt","backgroundColor","color","textAlign","StyleSheet","create","borderWidth","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","elevation","borderRadius","cardText","fontWeight","contentText","padding","fontSize"],"sources":["D:/EquipmentBorrowingSystemApp/components/ProductLend.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    StyleSheet\r\n} from 'react-native';\r\n\r\nimport { Card, Overlay, SearchBar } from 'react-native-elements';\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { ProductPage } from '../pages/ProductPage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nconst ProductStack = createNativeStackNavigator();\r\n\r\n\r\n\r\nexport function ProductLend({ item }) {\r\n    const [usedColors, setUsedColors] = useState([]);\r\n    const navigation = useNavigation();\r\n    const onClickItem = postId => {\r\n        // console.log(postId);\r\n        navigation.navigate('DirectMessage', {\r\n            postId: postId\r\n        });\r\n    };\r\n    function generateRandomColor() {\r\n        const colors = [\"#FAC7C0\", \"#FFDB94\", \"#CAE3D4\", \"#F0D7C4\", \"#B9E4E7\", \"#FFCADD\"];\r\n        const randNumber = Math.floor(Math.random() * colors.length);\r\n        return colors[randNumber];\r\n    }\r\n    return (\r\n        <TouchableOpacity onPress={() => onClickItem(item.postId)}>\r\n            <Card containerStyle={[styles.cardCnt, { backgroundColor: generateRandomColor() }]}>\r\n                <Card.Title\r\n                >\r\n                    <Text style={{ color: \"white\" }}>หาเมาส์ไร้สาย</Text>\r\n                </Card.Title>\r\n                <View>\r\n                    <Text>50 THB ต่อวัน</Text>\r\n                </View>\r\n                <View>\r\n                    <Text>\r\n                        โพสต์เมื่อ ...\r\n                    </Text>\r\n                </View>\r\n                <View>\r\n                    <Text>\r\n                        รายละเอียด\r\n                    </Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={{ textAlign: 'right' }}>เช่า 2 วัน</Text>\r\n                </View>\r\n            </Card>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    cardCnt: {\r\n        borderWidth: 0,\r\n        shadowColor: 'rgba(0,0,0, 0.0)', // Remove Shadow for iOS\r\n        shadowOffset: { height: 0, width: 0 },\r\n        shadowOpacity: 0,\r\n        shadowRadius: 0,\r\n        elevation: 0, // Remove Shadow for Android\r\n        borderRadius: 30,\r\n    },\r\n    cardText: {\r\n        textAlign: 'left',\r\n        fontWeight: 'bold',\r\n    },\r\n    contentText: {\r\n        textAlign: 'left',\r\n        fontWeight: 'bold',\r\n        padding: 5,\r\n        fontSize: 18,\r\n        color: 'white',\r\n    },\r\n\r\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAQA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,SAAxB,QAAyC,uBAAzC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,WAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AACA,IAAMC,YAAY,GAAGH,0BAA0B,EAA/C;AAIA,OAAO,SAASI,WAAT,OAA+B;EAAA,IAARC,IAAQ,QAARA,IAAQ;;EAClC,gBAAoCT,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOU,UAAP;EAAA,IAAmBC,aAAnB;;EACA,IAAMC,UAAU,GAAGN,aAAa,EAAhC;;EACA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM,EAAI;IAE1BF,UAAU,CAACG,QAAX,CAAoB,eAApB,EAAqC;MACjCD,MAAM,EAAEA;IADyB,CAArC;EAGH,CALD;;EAMA,SAASE,mBAAT,GAA+B;IAC3B,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAAf;IACA,IAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACK,MAAlC,CAAnB;IACA,OAAOL,MAAM,CAACC,UAAD,CAAb;EACH;;EACD,OACI,KAAC,gBAAD;IAAkB,OAAO,EAAE;MAAA,OAAML,WAAW,CAACJ,IAAI,CAACK,MAAN,CAAjB;IAAA,CAA3B;IAAA,UACI,MAAC,IAAD;MAAM,cAAc,EAAE,CAACS,MAAM,CAACC,OAAR,EAAiB;QAAEC,eAAe,EAAET,mBAAmB;MAAtC,CAAjB,CAAtB;MAAA,WACI,KAAC,IAAD,CAAM,KAAN;QAAA,UAEI,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEU,KAAK,EAAE;UAAT,CAAb;UAAA;QAAA;MAFJ,EADJ,EAKI,KAAC,IAAD;QAAA,UACI,KAAC,IAAD;UAAA;QAAA;MADJ,EALJ,EAQI,KAAC,IAAD;QAAA,UACI,KAAC,IAAD;UAAA;QAAA;MADJ,EARJ,EAaI,KAAC,IAAD;QAAA,UACI,KAAC,IAAD;UAAA;QAAA;MADJ,EAbJ,EAkBI,KAAC,IAAD;QAAA,UACI,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAb,CAAb;UAAA;QAAA;MADJ,EAlBJ;IAAA;EADJ,EADJ;AA0BH;AAAA;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC7BL,OAAO,EAAE;IACLM,WAAW,EAAE,CADR;IAELC,WAAW,EAAE,kBAFR;IAGLC,YAAY,EAAE;MAAEC,MAAM,EAAE,CAAV;MAAaC,KAAK,EAAE;IAApB,CAHT;IAILC,aAAa,EAAE,CAJV;IAKLC,YAAY,EAAE,CALT;IAMLC,SAAS,EAAE,CANN;IAOLC,YAAY,EAAE;EAPT,CADoB;EAU7BC,QAAQ,EAAE;IACNZ,SAAS,EAAE,MADL;IAENa,UAAU,EAAE;EAFN,CAVmB;EAc7BC,WAAW,EAAE;IACTd,SAAS,EAAE,MADF;IAETa,UAAU,EAAE,MAFH;IAGTE,OAAO,EAAE,CAHA;IAITC,QAAQ,EAAE,EAJD;IAKTjB,KAAK,EAAE;EALE;AAdgB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}