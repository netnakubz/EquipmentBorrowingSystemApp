{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar isOrientationPortrait = function isOrientationPortrait(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return height >= width;\n};\n\nvar isOrientationLandscape = function isOrientationLandscape(_ref2) {\n  var width = _ref2.width,\n      height = _ref2.height;\n  return width >= height;\n};\n\nexport function useDeviceOrientation() {\n  var screen = Dimensions.get('screen');\n  var initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen)\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      orientation = _useState2[0],\n      setOrientation = _useState2[1];\n\n  useEffect(function () {\n    var onChange = function onChange(_ref3) {\n      var screen = _ref3.screen;\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen)\n      });\n    };\n\n    var subscription = Dimensions.addEventListener('change', onChange);\n    return function () {\n      if (typeof (subscription == null ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      } else {\n        Dimensions.removeEventListener('change', onChange);\n      }\n    };\n  }, []);\n  return orientation.portrait === true ? 'PORTRAIT' : 'LANDSCAPE';\n}","map":{"version":3,"names":["useEffect","useState","isOrientationPortrait","width","height","isOrientationLandscape","useDeviceOrientation","screen","Dimensions","get","initialState","portrait","landscape","orientation","setOrientation","onChange","subscription","addEventListener","remove","removeEventListener"],"sources":["D:/EquipmentBorrowingSystemApp/node_modules/react-native-element-dropdown/src/useDeviceOrientation.ts"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport {Dimensions, ScaledSize} from 'react-native'\n\nconst isOrientationPortrait = ({width, height}: ScaledSize) => height >= width\nconst isOrientationLandscape = ({width, height}: ScaledSize) => width >= height\n\nexport function useDeviceOrientation() {\n  const screen = Dimensions.get('screen')\n  const initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen),\n  }\n\n  const [orientation, setOrientation] = useState(initialState)\n\n  useEffect(() => {\n    const onChange = ({screen}: {screen: ScaledSize}) => {\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen),\n      })\n    }\n\n    const subscription = Dimensions.addEventListener('change', onChange)\n\n    return () => {\n      // @ts-expect-error - React Native >= 0.65\n      if (typeof subscription?.remove === 'function') {\n        // @ts-expect-error - need update @types/react-native@0.65.x\n        subscription.remove()\n      } else {\n        // React Native < 0.65\n        Dimensions.removeEventListener('change', onChange)\n      }\n    }\n  }, [])\n\n  return orientation.portrait === true ? 'PORTRAIT' : 'LANDSCAPE';\n}\n"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAGA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;EAAA,IAAEC,KAAF,QAAEA,KAAF;EAAA,IAASC,MAAT,QAASA,MAAT;EAAA,OAAiCA,MAAM,IAAID,KAA3C;AAAA,CAA9B;;AACA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB;EAAA,IAAEF,KAAF,SAAEA,KAAF;EAAA,IAASC,MAAT,SAASA,MAAT;EAAA,OAAiCD,KAAK,IAAIC,MAA1C;AAAA,CAA/B;;AAEA,OAAO,SAASE,oBAAT,GAAgC;EACrC,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;EACA,IAAMC,YAAY,GAAG;IACnBC,QAAQ,EAAET,qBAAqB,CAACK,MAAD,CADZ;IAEnBK,SAAS,EAAEP,sBAAsB,CAACE,MAAD;EAFd,CAArB;;EAKA,gBAAsCN,QAAQ,CAACS,YAAD,CAA9C;EAAA;EAAA,IAAOG,WAAP;EAAA,IAAoBC,cAApB;;EAEAd,SAAS,CAAC,YAAM;IACd,IAAMe,QAAQ,GAAG,SAAXA,QAAW,QAAoC;MAAA,IAAlCR,MAAkC,SAAlCA,MAAkC;MACnDO,cAAc,CAAC;QACbH,QAAQ,EAAET,qBAAqB,CAACK,MAAD,CADlB;QAEbK,SAAS,EAAEP,sBAAsB,CAACE,MAAD;MAFpB,CAAD,CAAd;IAID,CALD;;IAOA,IAAMS,YAAY,GAAGR,UAAU,CAACS,gBAAX,CAA4B,QAA5B,EAAsCF,QAAtC,CAArB;IAEA,OAAO,YAAM;MAEX,IAAI,QAAOC,YAAP,oBAAOA,YAAY,CAAEE,MAArB,MAAgC,UAApC,EAAgD;QAE9CF,YAAY,CAACE,MAAb;MACD,CAHD,MAGO;QAELV,UAAU,CAACW,mBAAX,CAA+B,QAA/B,EAAyCJ,QAAzC;MACD;IACF,CATD;EAUD,CApBQ,EAoBN,EApBM,CAAT;EAsBA,OAAOF,WAAW,CAACF,QAAZ,KAAyB,IAAzB,GAAgC,UAAhC,GAA6C,WAApD;AACD"},"metadata":{},"sourceType":"module"}