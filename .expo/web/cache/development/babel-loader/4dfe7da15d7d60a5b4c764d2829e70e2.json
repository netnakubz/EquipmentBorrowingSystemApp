{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ic_close = require(\"../../assets/close.png\");\n\nvar defaultProps = {\n  style: {},\n  value: '',\n  showIcon: true,\n  currency: false,\n  numeric: false\n};\n\nvar TextInputComponent = function TextInputComponent(props) {\n  var fontFamily = props.fontFamily,\n      style = props.style,\n      value = props.value,\n      _props$placeholderTex = props.placeholderTextColor,\n      placeholderTextColor = _props$placeholderTex === void 0 ? '#000' : _props$placeholderTex,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      showIcon = props.showIcon,\n      inputStyle = props.inputStyle,\n      iconStyle = props.iconStyle,\n      _props$onChangeText = props.onChangeText,\n      onChangeText = _props$onChangeText === void 0 ? function (_value) {} : _props$onChangeText,\n      renderLeftIcon = props.renderLeftIcon,\n      renderRightIcon = props.renderRightIcon;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  useEffect(function () {\n    if (value) {\n      setText(value);\n    }\n  }, [value]);\n\n  var onChange = function onChange(text) {\n    setText(text);\n    onChangeText(text);\n  };\n\n  var _renderRightIcon = function _renderRightIcon() {\n    if (showIcon) {\n      if (renderRightIcon) {\n        return renderRightIcon();\n      }\n\n      if (text.length > 0) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return onChange('');\n          },\n          children: _jsx(Image, {\n            source: ic_close,\n            style: [styles.icon, iconStyle]\n          })\n        });\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n\n  var font = function font() {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    children: _jsx(View, {\n      style: [style],\n      children: _jsxs(View, {\n        style: styles.textInput,\n        children: [renderLeftIcon == null ? void 0 : renderLeftIcon(), _jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {\n          style: [styles.input, inputStyle, font()],\n          value: text,\n          placeholder: placeholder,\n          placeholderTextColor: placeholderTextColor,\n          onChangeText: onChange\n        })), _renderRightIcon()]\n      })\n    })\n  });\n};\n\nTextInputComponent.defaultProps = defaultProps;\nexport default TextInputComponent;","map":{"version":3,"names":["React","useEffect","useState","styles","ic_close","require","defaultProps","style","value","showIcon","currency","numeric","TextInputComponent","props","fontFamily","placeholderTextColor","placeholder","inputStyle","iconStyle","onChangeText","_value","renderLeftIcon","renderRightIcon","text","setText","onChange","_renderRightIcon","length","icon","font","textInput","input"],"sources":["D:/EquipmentBorrowingSystemApp/node_modules/react-native-element-dropdown/src/components/TextInput/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Image, TextInput,\n  TouchableOpacity, View,\n  TouchableWithoutFeedback\n} from 'react-native';\nimport { CTextInput } from './model';\nimport { styles } from './styles';\n\nconst ic_close = require('../../assets/close.png');\n\nconst defaultProps = {\n  style: {},\n  value: '',\n  showIcon: true,\n  currency: false,\n  numeric: false,\n};\n\nconst TextInputComponent: CTextInput = (props) => {\n  const {\n    fontFamily,\n    style,\n    value,\n    placeholderTextColor = '#000',\n    placeholder = '',\n    showIcon,\n    inputStyle,\n    iconStyle,\n    onChangeText = (_value: string) => { },\n    renderLeftIcon,\n    renderRightIcon,\n  } = props;\n\n  const [text, setText] = useState<string>('');\n\n  useEffect(() => {\n    if (value) {\n      setText(value);\n    }\n  }, [value]);\n\n  const onChange = (text: string) => {\n    setText(text);\n    onChangeText(text);\n  };\n\n  const _renderRightIcon = () => {\n    if (showIcon) {\n      if (renderRightIcon) {\n        return (\n          renderRightIcon()\n        );\n      }\n      if (text.length > 0) {\n        return (\n          <TouchableOpacity onPress={() => onChange('')}>\n            <Image source={ic_close} style={[styles.icon, iconStyle]} />\n          </TouchableOpacity>)\n      }\n      return null;\n    }\n    return null;\n  };\n\n  const font = () => {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      }\n    } else {\n      return {}\n    }\n  }\n\n  return (\n    <TouchableWithoutFeedback>\n      <View style={[style]}>\n        <View style={styles.textInput}>\n          {renderLeftIcon?.()}\n          <TextInput\n            {...props}\n            style={[styles.input, inputStyle, font()]}\n            value={text}\n            placeholder={placeholder}\n            placeholderTextColor={placeholderTextColor}\n            onChangeText={onChange}\n          />\n          {_renderRightIcon()}\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nTextInputComponent.defaultProps = defaultProps;\n\nexport default TextInputComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}