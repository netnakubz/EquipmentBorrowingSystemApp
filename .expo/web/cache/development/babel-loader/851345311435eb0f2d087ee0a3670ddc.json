{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from \"./GestureHandlerRootView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function gestureHandlerRootHOC(Component, containerStyles) {\n  function Wrapper(props) {\n    return _jsx(GestureHandlerRootView, {\n      style: [styles.container, containerStyles],\n      children: _jsx(Component, _objectSpread({}, props))\n    });\n  }\n\n  Wrapper.displayName = \"gestureHandlerRootHOC(\" + (Component.displayName || Component.name) + \")\";\n  hoistNonReactStatics(Wrapper, Component);\n  return Wrapper;\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","hoistNonReactStatics","GestureHandlerRootView","gestureHandlerRootHOC","Component","containerStyles","Wrapper","props","styles","container","displayName","name","StyleSheet","create","flex"],"sources":["D:/EquipmentBorrowingSystemApp/node_modules/react-native-gesture-handler/dist/src/gestureHandlerRootHOC.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\nexport default function gestureHandlerRootHOC(Component, containerStyles) {\n    function Wrapper(props) {\n        return (<GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props}/>\n      </GestureHandlerRootView>);\n    }\n    Wrapper.displayName = `gestureHandlerRootHOC(${Component.displayName || Component.name})`;\n    hoistNonReactStatics(Wrapper, Component);\n    return Wrapper;\n}\nconst styles = StyleSheet.create({\n    container: { flex: 1 },\n});\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,sBAAP;;AACA,eAAe,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,eAA1C,EAA2D;EACtE,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;IACpB,OAAQ,KAAC,sBAAD;MAAwB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBJ,eAAnB,CAA/B;MAAA,UACR,KAAC,SAAD,oBAAeE,KAAf;IADQ,EAAR;EAGH;;EACDD,OAAO,CAACI,WAAR,+BAA+CN,SAAS,CAACM,WAAV,IAAyBN,SAAS,CAACO,IAAlF;EACAV,oBAAoB,CAACK,OAAD,EAAUF,SAAV,CAApB;EACA,OAAOE,OAAP;AACH;AACD,IAAME,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC7BJ,SAAS,EAAE;IAAEK,IAAI,EAAE;EAAR;AADkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}