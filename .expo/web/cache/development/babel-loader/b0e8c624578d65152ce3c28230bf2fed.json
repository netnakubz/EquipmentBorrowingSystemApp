{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { Chip } from 'react-native-paper';\nimport axios from 'axios';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function DirectMessage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _route$params = route.params,\n      destination = _route$params.destination,\n      roomId = _route$params.roomId,\n      user = _route$params.user;\n  var SOCKET_URL = 'http://192.168.0.104:8080/ws';\n  var socket = '';\n  var stompClient = '';\n  var connected = false;\n  socket = new SockJS(SOCKET_URL);\n  var i = 5;\n\n  var contract = function contract() {\n    alert(\"Generate contract\");\n  };\n\n  var getChat = function getChat() {\n    var data;\n    return _regeneratorRuntime.async(function getChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://192.168.0.104:8080/api/v1/getMessage?roomId=\" + roomId + \"&userId=\" + parseInt(user)));\n\n          case 2:\n            data = _context.sent;\n            setMessages(data.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getChat();\n    navigation.setOptions({\n      title: destination\n    });\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, function (frame) {\n      connected = true;\n      stompClient.subscribe(\"/chat/private-\" + roomId, function (val) {\n        var newMessage = JSON.parse(val.body);\n        var object = [{\n          _id: newMessage._id,\n          createdAt: newMessage.createdAt,\n          text: newMessage.text,\n          user: {\n            _id: newMessage.user._id\n          }\n        }];\n        onReceiveMessage(object);\n      });\n    }, function (error) {\n      console.log(error);\n      connected = false;\n    });\n  }, []);\n  var onReceiveMessage = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    stompClient.send(\"/app/send-\" + roomId, JSON.stringify(messages[0]));\n  }, []);\n\n  return _jsx(GiftedChat, {\n    messages: messages,\n    isTyping: true,\n    onSend: function onSend(message) {\n      _onSend(message);\n    },\n    user: {\n      _id: user\n    }\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","useCallback","GiftedChat","Chip","axios","SockJS","Stomp","DirectMessage","route","navigation","messages","setMessages","params","destination","roomId","user","SOCKET_URL","socket","stompClient","connected","i","contract","alert","getChat","get","parseInt","data","setOptions","title","over","connect","frame","subscribe","val","newMessage","JSON","parse","body","object","_id","createdAt","text","onReceiveMessage","error","console","log","previousMessages","append","onSend","send","stringify","message"],"sources":["D:/EquipmentBorrowingSystemApp/pages/DirectMessage.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { View, Text, ScrollView, Button } from 'react-native';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport { Chip } from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'webstomp-client';\r\n\r\nexport default function DirectMessage({ route, navigation }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const { destination, roomId, user } = route.params;\r\n  const SOCKET_URL = 'http://192.168.0.104:8080/ws';\r\n  var socket = '';\r\n  var stompClient = '';\r\n  var connected = false;\r\n  socket = new SockJS(SOCKET_URL);\r\n\r\n  let i = 5;\r\n  const contract = () => {\r\n    alert(\"Generate contract\");\r\n  }\r\n  const getChat = async () => {\r\n    const data = await axios.get(`http://192.168.0.104:8080/api/v1/getMessage?roomId=${roomId}&userId=${parseInt(user)}`);\r\n    setMessages((data.data));\r\n  }\r\n  useEffect(() => {\r\n    getChat();\r\n\r\n    navigation.setOptions({ title: destination });\r\n    stompClient = Stomp.over(socket);\r\n    stompClient.connect(\r\n      {},\r\n      (frame) => {\r\n        connected = true;\r\n        stompClient.subscribe(`/chat/private-${roomId}`, (val) => {\r\n          const newMessage = JSON.parse(val.body);\r\n          const object = [{\r\n            _id: newMessage._id,\r\n            createdAt: newMessage.createdAt,\r\n            text: newMessage.text,\r\n            user: {\r\n              _id: newMessage.user._id\r\n            }\r\n          }]\r\n          onReceiveMessage(object);\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        connected = false;\r\n      }\r\n    );\r\n  }, []);\r\n  // Chat pattern\r\n  // Array [\r\n  // Object {\r\n  //   \"_id\": \"1bceb2f7-4d0f-4c75-9131-d38c2124897e\",\r\n  //   \"createdAt\": 2022-04-16T14:00:58.791Z,\r\n  //   \"text\": \"ราร\",\r\n  //   \"user\": Object {\r\n  //     \"_id\": 1,\r\n  //   },\r\n  // },\r\n  // ]\r\n  const onReceiveMessage = useCallback((messages = []) => {\r\n    setMessages((previousMessages) =>\r\n      GiftedChat.append(previousMessages, messages)\r\n    );\r\n  }, []);\r\n\r\n  const onSend = useCallback((messages = []) => {\r\n\r\n    // setMessages((previousMessages) =>\r\n    //   GiftedChat.append(previousMessages, messages)\r\n    // );\r\n    stompClient.send(`/app/send-${roomId}`, JSON.stringify(messages[0]));\r\n  }, []);\r\n\r\n  return (\r\n    <GiftedChat\r\n      messages={messages}\r\n      isTyping={true}\r\n      onSend={(message) => {\r\n        onSend(message)\r\n      }}\r\n      user={{\r\n        _id: user,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}