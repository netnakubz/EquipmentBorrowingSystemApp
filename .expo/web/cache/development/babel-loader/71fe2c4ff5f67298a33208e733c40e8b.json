{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"numberOfPointers\", \"direction\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Hammer from '@egjs/hammerjs';\nimport { Direction } from \"./constants\";\nimport { GesturePropError } from \"./Errors\";\nimport DraggingGestureHandler from \"./DraggingGestureHandler\";\nimport { isnan } from \"./utils\";\n\nvar FlingGestureHandler = function (_DraggingGestureHandl) {\n  _inherits(FlingGestureHandler, _DraggingGestureHandl);\n\n  var _super = _createSuper(FlingGestureHandler);\n\n  function FlingGestureHandler() {\n    _classCallCheck(this, FlingGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FlingGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'swipe';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Swipe;\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(event) {\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: Hammer.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: Hammer.INPUT_END,\n        isFinal: true\n      }));\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n\n      if (this.hasGestureFailed) {\n        return;\n      }\n\n      if (ev.isFinal) {\n        setTimeout(function () {\n          if (_this.isGestureRunning) {\n            _this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        var gesture = this.hammer.get(this.name);\n\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return {\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n  }, {\n    key: \"getTargetDirections\",\n    value: function getTargetDirections(direction) {\n      var directions = [];\n\n      if (direction & Direction.RIGHT) {\n        directions.push(Hammer.DIRECTION_RIGHT);\n      }\n\n      if (direction & Direction.LEFT) {\n        directions.push(Hammer.DIRECTION_LEFT);\n      }\n\n      if (direction & Direction.UP) {\n        directions.push(Hammer.DIRECTION_UP);\n      }\n\n      if (direction & Direction.DOWN) {\n        directions.push(Hammer.DIRECTION_DOWN);\n      }\n\n      return directions;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var _this$getConfig = this.getConfig(),\n          direction = _this$getConfig.direction;\n\n      var directions = [];\n\n      if (direction & Direction.RIGHT) {\n        directions.push(Hammer.DIRECTION_HORIZONTAL);\n      }\n\n      if (direction & Direction.LEFT) {\n        directions.push(Hammer.DIRECTION_HORIZONTAL);\n      }\n\n      if (direction & Direction.UP) {\n        directions.push(Hammer.DIRECTION_VERTICAL);\n      }\n\n      if (direction & Direction.DOWN) {\n        directions.push(Hammer.DIRECTION_VERTICAL);\n      }\n\n      directions = _toConsumableArray(new Set(directions));\n      if (directions.length === 0) return Hammer.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return Hammer.DIRECTION_ALL;\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref, _recognizer, _ref2) {\n      var numberOfPointers = _ref.numberOfPointers;\n      var pointerLength = _ref2.maxPointers;\n      var validPointerCount = pointerLength === numberOfPointers;\n\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n\n      return {\n        success: validPointerCount\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$numberOfPointer = _ref3.numberOfPointers,\n          numberOfPointers = _ref3$numberOfPointer === void 0 ? 1 : _ref3$numberOfPointer,\n          direction = _ref3.direction,\n          props = _objectWithoutProperties(_ref3, _excluded);\n\n      if (isnan(direction) || typeof direction !== 'number') {\n        throw new GesturePropError('direction', direction, 'number');\n      }\n\n      return _get(_getPrototypeOf(FlingGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        numberOfPointers: numberOfPointers,\n        direction: direction\n      }, props));\n    }\n  }]);\n\n  return FlingGestureHandler;\n}(DraggingGestureHandler);\n\nexport default FlingGestureHandler;","map":{"version":3,"names":["Hammer","Direction","GesturePropError","DraggingGestureHandler","isnan","FlingGestureHandler","Swipe","event","sendEvent","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","ev","setTimeout","cancelEvent","gesture","hammer","get","name","options","enable","onStart","pointers","config","numberOfPointers","direction","getDirection","directions","RIGHT","push","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","Set","length","DIRECTION_NONE","DIRECTION_ALL","_recognizer","pointerLength","maxPointers","validPointerCount","failed","success","props"],"sources":["D:/EquipmentBorrowingSystemApp/node_modules/react-native-gesture-handler/dist/src/web/FlingGestureHandler.js"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\nclass FlingGestureHandler extends DraggingGestureHandler {\n    get name() {\n        return 'swipe';\n    }\n    get NativeGestureClass() {\n        return Hammer.Swipe;\n    }\n    onGestureActivated(event) {\n        this.sendEvent({\n            ...event,\n            eventType: Hammer.INPUT_MOVE,\n            isFinal: false,\n            isFirst: true,\n        });\n        this.isGestureRunning = false;\n        this.hasGestureFailed = false;\n        this.sendEvent({\n            ...event,\n            eventType: Hammer.INPUT_END,\n            isFinal: true,\n        });\n    }\n    onRawEvent(ev) {\n        super.onRawEvent(ev);\n        if (this.hasGestureFailed) {\n            return;\n        }\n        // Hammer doesn't send a `cancel` event for taps.\n        // Manually fail the event.\n        if (ev.isFinal) {\n            setTimeout(() => {\n                if (this.isGestureRunning) {\n                    this.cancelEvent(ev);\n                }\n            });\n        }\n        else if (!this.hasGestureFailed && !this.isGestureRunning) {\n            // Tap Gesture start event\n            const gesture = this.hammer.get(this.name);\n            // @ts-ignore FIXME(TS)\n            if (gesture.options.enable(gesture, ev)) {\n                this.onStart(ev);\n                this.sendEvent(ev);\n            }\n        }\n    }\n    getHammerConfig() {\n        return {\n            // @ts-ignore FIXME(TS)\n            pointers: this.config.numberOfPointers,\n            direction: this.getDirection(),\n        };\n    }\n    getTargetDirections(direction) {\n        const directions = [];\n        if (direction & Direction.RIGHT) {\n            directions.push(Hammer.DIRECTION_RIGHT);\n        }\n        if (direction & Direction.LEFT) {\n            directions.push(Hammer.DIRECTION_LEFT);\n        }\n        if (direction & Direction.UP) {\n            directions.push(Hammer.DIRECTION_UP);\n        }\n        if (direction & Direction.DOWN) {\n            directions.push(Hammer.DIRECTION_DOWN);\n        }\n        // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n        return directions;\n    }\n    getDirection() {\n        // @ts-ignore FIXME(TS)\n        const { direction } = this.getConfig();\n        let directions = [];\n        if (direction & Direction.RIGHT) {\n            directions.push(Hammer.DIRECTION_HORIZONTAL);\n        }\n        if (direction & Direction.LEFT) {\n            directions.push(Hammer.DIRECTION_HORIZONTAL);\n        }\n        if (direction & Direction.UP) {\n            directions.push(Hammer.DIRECTION_VERTICAL);\n        }\n        if (direction & Direction.DOWN) {\n            directions.push(Hammer.DIRECTION_VERTICAL);\n        }\n        directions = [...new Set(directions)];\n        if (directions.length === 0)\n            return Hammer.DIRECTION_NONE;\n        if (directions.length === 1)\n            return directions[0];\n        return Hammer.DIRECTION_ALL;\n    }\n    isGestureEnabledForEvent({ numberOfPointers }, _recognizer, { maxPointers: pointerLength }) {\n        const validPointerCount = pointerLength === numberOfPointers;\n        if (!validPointerCount && this.isGestureRunning) {\n            return { failed: true };\n        }\n        return { success: validPointerCount };\n    }\n    updateGestureConfig({ numberOfPointers = 1, direction, ...props }) {\n        if (isnan(direction) || typeof direction !== 'number') {\n            throw new GesturePropError('direction', direction, 'number');\n        }\n        return super.updateGestureConfig({\n            numberOfPointers,\n            direction,\n            ...props,\n        });\n    }\n}\nexport default FlingGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}