{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Hammer from '@egjs/hammerjs';\nimport { State } from \"../State\";\nimport { CONTENT_TOUCHES_DELAY, CONTENT_TOUCHES_QUICK_TAP_END_DELAY } from \"./constants\";\nimport DiscreteGestureHandler from \"./DiscreteGestureHandler\";\nimport { fireAfterInterval, isValidNumber, isnan } from \"./utils\";\n\nvar PressGestureHandler = function (_DiscreteGestureHandl) {\n  _inherits(PressGestureHandler, _DiscreteGestureHandl);\n\n  var _super = _createSuper(PressGestureHandler);\n\n  function PressGestureHandler() {\n    var _this;\n\n    _classCallCheck(this, PressGestureHandler);\n\n    _this = _super.apply(this, arguments);\n    _this.initialEvent = null;\n    _this.shouldDelayTouches = true;\n    return _this;\n  }\n\n  _createClass(PressGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'press';\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Press;\n    }\n  }, {\n    key: \"simulateCancelEvent\",\n    value: function simulateCancelEvent(inputData) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var shouldCancelWhenOutside = _ref.shouldCancelWhenOutside,\n          maxDistSq = _ref.maxDistSq;\n      return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n\n      return (_Hammer$INPUT_START$H = {}, _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_START, State.BEGAN), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_MOVE, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_END, State.END), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_CANCEL, State.CANCELLED), _Hammer$INPUT_START$H)[type];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(PressGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n  }, {\n    key: \"shouldDelayTouchForEvent\",\n    value: function shouldDelayTouchForEvent(_ref2) {\n      var pointerType = _ref2.pointerType;\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n  }, {\n    key: \"onGestureStart\",\n    value: function onGestureStart(ev) {\n      var _this2 = this;\n\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = fireAfterInterval(function () {\n        _this2.sendGestureStartedEvent(_this2.initialEvent);\n\n        _this2.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n    }\n  }, {\n    key: \"sendGestureStartedEvent\",\n    value: function sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n        eventType: Hammer.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n  }, {\n    key: \"forceInvalidate\",\n    value: function forceInvalidate(event) {\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"forceInvalidate\", this).call(this, event);\n\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this3 = this;\n\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          var timeout;\n\n          if (this.visualFeedbackTimer) {\n            timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n\n          fireAfterInterval(function () {\n            _this3.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n              eventType: Hammer.INPUT_END,\n              isFinal: true\n            }));\n\n            _this3.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n            eventType: Hammer.INPUT_MOVE,\n            isFinal: false\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$shouldActivateO = _ref3.shouldActivateOnStart,\n          shouldActivateOnStart = _ref3$shouldActivateO === void 0 ? false : _ref3$shouldActivateO,\n          _ref3$disallowInterru = _ref3.disallowInterruption,\n          disallowInterruption = _ref3$disallowInterru === void 0 ? false : _ref3$disallowInterru,\n          _ref3$shouldCancelWhe = _ref3.shouldCancelWhenOutside,\n          shouldCancelWhenOutside = _ref3$shouldCancelWhe === void 0 ? true : _ref3$shouldCancelWhe,\n          _ref3$minDurationMs = _ref3.minDurationMs,\n          minDurationMs = _ref3$minDurationMs === void 0 ? Number.NaN : _ref3$minDurationMs,\n          _ref3$maxDist = _ref3.maxDist,\n          maxDist = _ref3$maxDist === void 0 ? Number.NaN : _ref3$maxDist,\n          _ref3$minPointers = _ref3.minPointers,\n          minPointers = _ref3$minPointers === void 0 ? 1 : _ref3$minPointers,\n          _ref3$maxPointers = _ref3.maxPointers,\n          maxPointers = _ref3$maxPointers === void 0 ? 1 : _ref3$maxPointers,\n          props = _objectWithoutProperties(_ref3, _excluded);\n\n      return _get(_getPrototypeOf(PressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        shouldActivateOnStart: shouldActivateOnStart,\n        disallowInterruption: disallowInterruption,\n        shouldCancelWhenOutside: shouldCancelWhenOutside,\n        minDurationMs: minDurationMs,\n        maxDist: maxDist,\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }]);\n\n  return PressGestureHandler;\n}(DiscreteGestureHandler);\n\nexport default PressGestureHandler;","map":{"version":3,"names":["Hammer","State","CONTENT_TOUCHES_DELAY","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","DiscreteGestureHandler","fireAfterInterval","isValidNumber","isnan","PressGestureHandler","arguments","initialEvent","shouldDelayTouches","config","minDurationMs","maxDist","Press","inputData","hasGestureFailed","cancelEvent","shouldCancelWhenOutside","maxDistSq","type","INPUT_START","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","hasCustomActivationCriteria","time","ev","onGestureStart","pointerType","isGestureRunning","clearTimeout","visualFeedbackTimer","sendGestureStartedEvent","shouldDelayTouchForEvent","sendEvent","eventType","isFirst","event","isFinal","timeout","onGestureEnded","shouldActivateOnStart","disallowInterruption","Number","NaN","minPointers","maxPointers","props"],"sources":["D:/EquipmentBorrowingSystemApp/node_modules/react-native-gesture-handler/dist/src/web/PressGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { State } from '../State';\nimport { CONTENT_TOUCHES_DELAY, CONTENT_TOUCHES_QUICK_TAP_END_DELAY, } from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\nclass PressGestureHandler extends DiscreteGestureHandler {\n    constructor() {\n        super(...arguments);\n        this.initialEvent = null;\n        this.shouldDelayTouches = true;\n    }\n    get name() {\n        return 'press';\n    }\n    get minDurationMs() {\n        // @ts-ignore FIXME(TS)\n        return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n        return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n        return Hammer.Press;\n    }\n    simulateCancelEvent(inputData) {\n        // Long press never starts so we can't rely on the running event boolean.\n        this.hasGestureFailed = true;\n        this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq, }) {\n        return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n    }\n    getState(type) {\n        return {\n            [Hammer.INPUT_START]: State.BEGAN,\n            [Hammer.INPUT_MOVE]: State.ACTIVE,\n            [Hammer.INPUT_END]: State.END,\n            [Hammer.INPUT_CANCEL]: State.CANCELLED,\n        }[type];\n    }\n    getConfig() {\n        if (!this.hasCustomActivationCriteria) {\n            // Default config\n            // If no params have been defined then this config should emulate the native gesture as closely as possible.\n            return {\n                shouldCancelWhenOutside: true,\n                maxDistSq: 10,\n            };\n        }\n        return this.config;\n    }\n    getHammerConfig() {\n        return {\n            ...super.getHammerConfig(),\n            // threshold: this.maxDist,\n            time: this.minDurationMs,\n        };\n    }\n    onGestureActivated(ev) {\n        this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({ pointerType }) {\n        // Don't disable event for mouse input\n        return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n        this.isGestureRunning = true;\n        clearTimeout(this.visualFeedbackTimer);\n        this.initialEvent = ev;\n        this.visualFeedbackTimer = fireAfterInterval(() => {\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n        }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n        clearTimeout(this.visualFeedbackTimer);\n        this.visualFeedbackTimer = null;\n        this.sendEvent({\n            ...ev,\n            eventType: Hammer.INPUT_MOVE,\n            isFirst: true,\n        });\n    }\n    forceInvalidate(event) {\n        super.forceInvalidate(event);\n        clearTimeout(this.visualFeedbackTimer);\n        this.visualFeedbackTimer = null;\n        this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n        super.onRawEvent(ev);\n        if (this.isGestureRunning) {\n            if (ev.isFinal) {\n                let timeout;\n                if (this.visualFeedbackTimer) {\n                    // Aesthetic timing for a quick tap.\n                    // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n                    // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n                    timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n                    this.sendGestureStartedEvent(this.initialEvent);\n                    this.initialEvent = null;\n                }\n                fireAfterInterval(() => {\n                    this.sendEvent({\n                        ...ev,\n                        eventType: Hammer.INPUT_END,\n                        isFinal: true,\n                    });\n                    // @ts-ignore -- this should explicitly support undefined\n                    this.onGestureEnded();\n                }, timeout);\n            }\n            else {\n                this.sendEvent({\n                    ...ev,\n                    eventType: Hammer.INPUT_MOVE,\n                    isFinal: false,\n                });\n            }\n        }\n    }\n    updateGestureConfig({ shouldActivateOnStart = false, disallowInterruption = false, shouldCancelWhenOutside = true, minDurationMs = Number.NaN, maxDist = Number.NaN, minPointers = 1, maxPointers = 1, ...props }) {\n        return super.updateGestureConfig({\n            shouldActivateOnStart,\n            disallowInterruption,\n            shouldCancelWhenOutside,\n            minDurationMs,\n            maxDist,\n            minPointers,\n            maxPointers,\n            ...props,\n        });\n    }\n}\nexport default PressGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}