{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { State } from \"../../State\";\nimport { BaseButton } from \"../GestureButtons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2\n};\n\nvar GenericTouchable = function (_Component) {\n  _inherits(GenericTouchable, _Component);\n\n  var _super = _createSuper(GenericTouchable);\n\n  function GenericTouchable() {\n    var _this;\n\n    _classCallCheck(this, GenericTouchable);\n\n    _this = _super.apply(this, arguments);\n    _this.longPressDetected = false;\n    _this.pointerInside = true;\n    _this.STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n    _this.onGestureEvent = function (_ref) {\n      var pointerInside = _ref.nativeEvent.pointerInside;\n\n      if (_this.pointerInside !== pointerInside) {\n        if (pointerInside) {\n          _this.onMoveIn();\n        } else {\n          _this.onMoveOut();\n        }\n      }\n\n      _this.pointerInside = pointerInside;\n    };\n\n    _this.onHandlerStateChange = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var state = nativeEvent.state;\n\n      if (state === State.CANCELLED || state === State.FAILED) {\n        _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      } else if (state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) && _this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        _this.handlePressIn();\n      } else if (state === State.END) {\n        var shouldCallOnPress = !_this.longPressDetected && _this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && _this.pressOutTimeout === null;\n\n        _this.handleGoToUndetermined();\n\n        if (shouldCallOnPress) {\n          _this.props.onPress == null ? void 0 : _this.props.onPress();\n        }\n      }\n    };\n\n    _this.onLongPressDetected = function () {\n      _this.longPressDetected = true;\n      _this.props.onLongPress == null ? void 0 : _this.props.onLongPress();\n    };\n\n    return _this;\n  }\n\n  _createClass(GenericTouchable, [{\n    key: \"handlePressIn\",\n    value: function handlePressIn() {\n      var _this2 = this;\n\n      if (this.props.delayPressIn) {\n        this.pressInTimeout = setTimeout(function () {\n          _this2.moveToState(TOUCHABLE_STATE.BEGAN);\n\n          _this2.pressInTimeout = null;\n        }, this.props.delayPressIn);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n\n      if (this.props.onLongPress) {\n        var time = (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n        this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n      }\n    }\n  }, {\n    key: \"handleMoveOutside\",\n    value: function handleMoveOutside() {\n      var _this3 = this;\n\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = this.pressOutTimeout || setTimeout(function () {\n          _this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n\n          _this3.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n      }\n    }\n  }, {\n    key: \"handleGoToUndetermined\",\n    value: function handleGoToUndetermined() {\n      var _this4 = this;\n\n      clearTimeout(this.pressOutTimeout);\n\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = setTimeout(function () {\n          if (_this4.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n            _this4.moveToState(TOUCHABLE_STATE.BEGAN);\n          }\n\n          _this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n\n          _this4.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.longPressDetected = false;\n      this.pointerInside = true;\n      clearTimeout(this.pressInTimeout);\n      clearTimeout(this.pressOutTimeout);\n      clearTimeout(this.longPressTimeout);\n      this.pressOutTimeout = null;\n      this.longPressTimeout = null;\n      this.pressInTimeout = null;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState) {\n      var _this$props$onStateCh, _this$props4;\n\n      if (newState === this.STATE) {\n        return;\n      }\n\n      if (newState === TOUCHABLE_STATE.BEGAN) {\n        var _this$props$onPressIn, _this$props;\n\n        (_this$props$onPressIn = (_this$props = this.props).onPressIn) == null ? void 0 : _this$props$onPressIn.call(_this$props);\n      } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        var _this$props$onPressOu, _this$props2;\n\n        (_this$props$onPressOu = (_this$props2 = this.props).onPressOut) == null ? void 0 : _this$props$onPressOu.call(_this$props2);\n      } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n        this.reset();\n\n        if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n          var _this$props$onPressOu2, _this$props3;\n\n          (_this$props$onPressOu2 = (_this$props3 = this.props).onPressOut) == null ? void 0 : _this$props$onPressOu2.call(_this$props3);\n        }\n      }\n\n      (_this$props$onStateCh = (_this$props4 = this.props).onStateChange) == null ? void 0 : _this$props$onStateCh.call(_this$props4, this.STATE, newState);\n      this.STATE = newState;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.reset();\n    }\n  }, {\n    key: \"onMoveIn\",\n    value: function onMoveIn() {\n      if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n    }\n  }, {\n    key: \"onMoveOut\",\n    value: function onMoveOut() {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = null;\n\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        this.handleMoveOutside();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var coreProps = {\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityState: this.props.accessibilityState,\n        nativeID: this.props.nativeID,\n        onLayout: this.props.onLayout,\n        hitSlop: this.props.hitSlop\n      };\n      return _jsx(BaseButton, _objectSpread(_objectSpread({\n        style: this.props.containerStyle,\n        onHandlerStateChange: this.props.disabled ? undefined : this.onHandlerStateChange,\n        onGestureEvent: this.onGestureEvent,\n        hitSlop: this.props.hitSlop,\n        shouldActivateOnStart: this.props.shouldActivateOnStart,\n        disallowInterruption: this.props.disallowInterruption,\n        testID: this.props.testID\n      }, this.props.extraButtonProps), {}, {\n        children: _jsx(Animated.View, _objectSpread(_objectSpread({}, coreProps), {}, {\n          style: this.props.style,\n          children: this.props.children\n        }))\n      }));\n    }\n  }]);\n\n  return GenericTouchable;\n}(Component);\n\nexport { GenericTouchable as default };\nGenericTouchable.defaultProps = {\n  delayLongPress: 600,\n  extraButtonProps: {\n    rippleColor: 'transparent'\n  }\n};","map":{"version":3,"names":["React","Component","State","BaseButton","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","arguments","longPressDetected","pointerInside","STATE","onGestureEvent","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","state","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","handlePressIn","END","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","props","onPress","onLongPressDetected","onLongPress","delayPressIn","pressInTimeout","setTimeout","time","delayLongPress","longPressTimeout","delayPressOut","clearTimeout","reset","newState","onPressIn","onPressOut","onStateChange","handleMoveOutside","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","nativeID","onLayout","hitSlop","containerStyle","disabled","undefined","shouldActivateOnStart","disallowInterruption","testID","extraButtonProps","style","children","defaultProps","rippleColor"],"sources":["D:/EquipmentBorrowingSystemApp/node_modules/react-native-gesture-handler/dist/src/components/touchables/GenericTouchable.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Animated, Platform, } from 'react-native';\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n    UNDETERMINED: 0,\n    BEGAN: 1,\n    MOVED_OUTSIDE: 2,\n};\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\nexport default class GenericTouchable extends Component {\n    constructor() {\n        super(...arguments);\n        // This flag is required since recognition of longPress implies not-invoking onPress\n        this.longPressDetected = false;\n        this.pointerInside = true;\n        // State of touchable\n        this.STATE = TOUCHABLE_STATE.UNDETERMINED;\n        this.onGestureEvent = ({ nativeEvent: { pointerInside }, }) => {\n            if (this.pointerInside !== pointerInside) {\n                if (pointerInside) {\n                    this.onMoveIn();\n                }\n                else {\n                    this.onMoveOut();\n                }\n            }\n            this.pointerInside = pointerInside;\n        };\n        this.onHandlerStateChange = ({ nativeEvent, }) => {\n            const { state } = nativeEvent;\n            if (state === State.CANCELLED || state === State.FAILED) {\n                // Need to handle case with external cancellation (e.g. by ScrollView)\n                this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n            }\n            else if (\n            // This platform check is an implication of slightly different behavior of handlers on different platform.\n            // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n            // On iOS event on \"Began\" is not delivered.\n            state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n                this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n                // Moving inside requires\n                this.handlePressIn();\n            }\n            else if (state === State.END) {\n                const shouldCallOnPress = !this.longPressDetected &&\n                    this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n                    this.pressOutTimeout === null;\n                this.handleGoToUndetermined();\n                if (shouldCallOnPress) {\n                    // Calls only inside component whether no long press was called previously\n                    this.props.onPress?.();\n                }\n            }\n        };\n        this.onLongPressDetected = () => {\n            this.longPressDetected = true;\n            // checked for in the caller of `onLongPressDetected`, but better to check twice\n            this.props.onLongPress?.();\n        };\n    }\n    // handlePressIn in called on first touch on traveling inside component.\n    // Handles state transition with delay.\n    handlePressIn() {\n        if (this.props.delayPressIn) {\n            this.pressInTimeout = setTimeout(() => {\n                this.moveToState(TOUCHABLE_STATE.BEGAN);\n                this.pressInTimeout = null;\n            }, this.props.delayPressIn);\n        }\n        else {\n            this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        if (this.props.onLongPress) {\n            const time = (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n            this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n        }\n    }\n    // handleMoveOutside in called on traveling outside component.\n    // Handles state transition with delay.\n    handleMoveOutside() {\n        if (this.props.delayPressOut) {\n            this.pressOutTimeout =\n                this.pressOutTimeout ||\n                    setTimeout(() => {\n                        this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n                        this.pressOutTimeout = null;\n                    }, this.props.delayPressOut);\n        }\n        else {\n            this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n        }\n    }\n    // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n    handleGoToUndetermined() {\n        clearTimeout(this.pressOutTimeout); // TODO: maybe it can be undefined\n        if (this.props.delayPressOut) {\n            this.pressOutTimeout = setTimeout(() => {\n                if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n                    this.moveToState(TOUCHABLE_STATE.BEGAN);\n                }\n                this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n                this.pressOutTimeout = null;\n            }, this.props.delayPressOut);\n        }\n        else {\n            if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n                this.moveToState(TOUCHABLE_STATE.BEGAN);\n            }\n            this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        }\n    }\n    componentDidMount() {\n        this.reset();\n    }\n    // reset timeout to prevent memory leaks.\n    reset() {\n        this.longPressDetected = false;\n        this.pointerInside = true;\n        clearTimeout(this.pressInTimeout);\n        clearTimeout(this.pressOutTimeout);\n        clearTimeout(this.longPressTimeout);\n        this.pressOutTimeout = null;\n        this.longPressTimeout = null;\n        this.pressInTimeout = null;\n    }\n    // All states' transitions are defined here.\n    moveToState(newState) {\n        if (newState === this.STATE) {\n            // Ignore dummy transitions\n            return;\n        }\n        if (newState === TOUCHABLE_STATE.BEGAN) {\n            // First touch and moving inside\n            this.props.onPressIn?.();\n        }\n        else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n            // Moving outside\n            this.props.onPressOut?.();\n        }\n        else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n            // Need to reset each time on transition to UNDETERMINED\n            this.reset();\n            if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n                // ... and if it happens inside button.\n                this.props.onPressOut?.();\n            }\n        }\n        // Finally call lister (used by subclasses)\n        this.props.onStateChange?.(this.STATE, newState);\n        // ... and make transition.\n        this.STATE = newState;\n    }\n    componentWillUnmount() {\n        // to prevent memory leaks\n        this.reset();\n    }\n    onMoveIn() {\n        if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n            // This call is not throttled with delays (like in RN's implementation).\n            this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n    }\n    onMoveOut() {\n        // long press should no longer be detected\n        clearTimeout(this.longPressTimeout);\n        this.longPressTimeout = null;\n        if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n            this.handleMoveOutside();\n        }\n    }\n    render() {\n        const coreProps = {\n            accessible: this.props.accessible !== false,\n            accessibilityLabel: this.props.accessibilityLabel,\n            accessibilityHint: this.props.accessibilityHint,\n            accessibilityRole: this.props.accessibilityRole,\n            // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n            // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n            accessibilityState: this.props.accessibilityState,\n            nativeID: this.props.nativeID,\n            onLayout: this.props.onLayout,\n            hitSlop: this.props.hitSlop,\n        };\n        return (<BaseButton style={this.props.containerStyle} onHandlerStateChange={\n        // TODO: not sure if it can be undefined instead of null\n        this.props.disabled ? undefined : this.onHandlerStateChange} onGestureEvent={this.onGestureEvent} hitSlop={this.props.hitSlop} shouldActivateOnStart={this.props.shouldActivateOnStart} disallowInterruption={this.props.disallowInterruption} testID={this.props.testID} {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>);\n    }\n}\nGenericTouchable.defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n        rippleColor: 'transparent',\n    },\n};\n"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,KAAT;AACA,SAASC,UAAT;;AAQA,OAAO,IAAMC,eAAe,GAAG;EAC3BC,YAAY,EAAE,CADa;EAE3BC,KAAK,EAAE,CAFoB;EAG3BC,aAAa,EAAE;AAHY,CAAxB;;IAScC,gB;;;;;EACjB,4BAAc;IAAA;;IAAA;;IACV,2BAASC,SAAT;IAEA,MAAKC,iBAAL,GAAyB,KAAzB;IACA,MAAKC,aAAL,GAAqB,IAArB;IAEA,MAAKC,KAAL,GAAaR,eAAe,CAACC,YAA7B;;IACA,MAAKQ,cAAL,GAAsB,gBAAyC;MAAA,IAAvBF,aAAuB,QAAtCG,WAAsC,CAAvBH,aAAuB;;MAC3D,IAAI,MAAKA,aAAL,KAAuBA,aAA3B,EAA0C;QACtC,IAAIA,aAAJ,EAAmB;UACf,MAAKI,QAAL;QACH,CAFD,MAGK;UACD,MAAKC,SAAL;QACH;MACJ;;MACD,MAAKL,aAAL,GAAqBA,aAArB;IACH,CAVD;;IAWA,MAAKM,oBAAL,GAA4B,iBAAsB;MAAA,IAAnBH,WAAmB,SAAnBA,WAAmB;MAC9C,IAAQI,KAAR,GAAkBJ,WAAlB,CAAQI,KAAR;;MACA,IAAIA,KAAK,KAAKhB,KAAK,CAACiB,SAAhB,IAA6BD,KAAK,KAAKhB,KAAK,CAACkB,MAAjD,EAAyD;QAErD,MAAKC,WAAL,CAAiBjB,eAAe,CAACC,YAAjC;MACH,CAHD,MAIK,IAILa,KAAK,MAAMI,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BrB,KAAK,CAACsB,MAAlC,GAA2CtB,KAAK,CAACI,KAAvD,CAAL,IACI,MAAKM,KAAL,KAAeR,eAAe,CAACC,YAL9B,EAK4C;QAE7C,MAAKoB,aAAL;MACH,CARI,MASA,IAAIP,KAAK,KAAKhB,KAAK,CAACwB,GAApB,EAAyB;QAC1B,IAAMC,iBAAiB,GAAG,CAAC,MAAKjB,iBAAN,IACtB,MAAKE,KAAL,KAAeR,eAAe,CAACG,aADT,IAEtB,MAAKqB,eAAL,KAAyB,IAF7B;;QAGA,MAAKC,sBAAL;;QACA,IAAIF,iBAAJ,EAAuB;UAEnB,MAAKG,KAAL,CAAWC,OAAX,0BAAKD,KAAL,CAAWC,OAAX;QACH;MACJ;IACJ,CAzBD;;IA0BA,MAAKC,mBAAL,GAA2B,YAAM;MAC7B,MAAKtB,iBAAL,GAAyB,IAAzB;MAEA,MAAKoB,KAAL,CAAWG,WAAX,0BAAKH,KAAL,CAAWG,WAAX;IACH,CAJD;;IA5CU;EAiDb;;;;WAGD,yBAAgB;MAAA;;MACZ,IAAI,KAAKH,KAAL,CAAWI,YAAf,EAA6B;QACzB,KAAKC,cAAL,GAAsBC,UAAU,CAAC,YAAM;UACnC,MAAI,CAACf,WAAL,CAAiBjB,eAAe,CAACE,KAAjC;;UACA,MAAI,CAAC6B,cAAL,GAAsB,IAAtB;QACH,CAH+B,EAG7B,KAAKL,KAAL,CAAWI,YAHkB,CAAhC;MAIH,CALD,MAMK;QACD,KAAKb,WAAL,CAAiBjB,eAAe,CAACE,KAAjC;MACH;;MACD,IAAI,KAAKwB,KAAL,CAAWG,WAAf,EAA4B;QACxB,IAAMI,IAAI,GAAG,CAAC,KAAKP,KAAL,CAAWI,YAAX,IAA2B,CAA5B,KAAkC,KAAKJ,KAAL,CAAWQ,cAAX,IAA6B,CAA/D,CAAb;QACA,KAAKC,gBAAL,GAAwBH,UAAU,CAAC,KAAKJ,mBAAN,EAA2BK,IAA3B,CAAlC;MACH;IACJ;;;WAGD,6BAAoB;MAAA;;MAChB,IAAI,KAAKP,KAAL,CAAWU,aAAf,EAA8B;QAC1B,KAAKZ,eAAL,GACI,KAAKA,eAAL,IACIQ,UAAU,CAAC,YAAM;UACb,MAAI,CAACf,WAAL,CAAiBjB,eAAe,CAACG,aAAjC;;UACA,MAAI,CAACqB,eAAL,GAAuB,IAAvB;QACH,CAHS,EAGP,KAAKE,KAAL,CAAWU,aAHJ,CAFlB;MAMH,CAPD,MAQK;QACD,KAAKnB,WAAL,CAAiBjB,eAAe,CAACG,aAAjC;MACH;IACJ;;;WAED,kCAAyB;MAAA;;MACrBkC,YAAY,CAAC,KAAKb,eAAN,CAAZ;;MACA,IAAI,KAAKE,KAAL,CAAWU,aAAf,EAA8B;QAC1B,KAAKZ,eAAL,GAAuBQ,UAAU,CAAC,YAAM;UACpC,IAAI,MAAI,CAACxB,KAAL,KAAeR,eAAe,CAACC,YAAnC,EAAiD;YAC7C,MAAI,CAACgB,WAAL,CAAiBjB,eAAe,CAACE,KAAjC;UACH;;UACD,MAAI,CAACe,WAAL,CAAiBjB,eAAe,CAACC,YAAjC;;UACA,MAAI,CAACuB,eAAL,GAAuB,IAAvB;QACH,CANgC,EAM9B,KAAKE,KAAL,CAAWU,aANmB,CAAjC;MAOH,CARD,MASK;QACD,IAAI,KAAK5B,KAAL,KAAeR,eAAe,CAACC,YAAnC,EAAiD;UAC7C,KAAKgB,WAAL,CAAiBjB,eAAe,CAACE,KAAjC;QACH;;QACD,KAAKe,WAAL,CAAiBjB,eAAe,CAACC,YAAjC;MACH;IACJ;;;WACD,6BAAoB;MAChB,KAAKqC,KAAL;IACH;;;WAED,iBAAQ;MACJ,KAAKhC,iBAAL,GAAyB,KAAzB;MACA,KAAKC,aAAL,GAAqB,IAArB;MACA8B,YAAY,CAAC,KAAKN,cAAN,CAAZ;MACAM,YAAY,CAAC,KAAKb,eAAN,CAAZ;MACAa,YAAY,CAAC,KAAKF,gBAAN,CAAZ;MACA,KAAKX,eAAL,GAAuB,IAAvB;MACA,KAAKW,gBAAL,GAAwB,IAAxB;MACA,KAAKJ,cAAL,GAAsB,IAAtB;IACH;;;WAED,qBAAYQ,QAAZ,EAAsB;MAAA;;MAClB,IAAIA,QAAQ,KAAK,KAAK/B,KAAtB,EAA6B;QAEzB;MACH;;MACD,IAAI+B,QAAQ,KAAKvC,eAAe,CAACE,KAAjC,EAAwC;QAAA;;QAEpC,6CAAKwB,KAAL,EAAWc,SAAX;MACH,CAHD,MAIK,IAAID,QAAQ,KAAKvC,eAAe,CAACG,aAAjC,EAAgD;QAAA;;QAEjD,8CAAKuB,KAAL,EAAWe,UAAX;MACH,CAHI,MAIA,IAAIF,QAAQ,KAAKvC,eAAe,CAACC,YAAjC,EAA+C;QAEhD,KAAKqC,KAAL;;QACA,IAAI,KAAK9B,KAAL,KAAeR,eAAe,CAACE,KAAnC,EAA0C;UAAA;;UAEtC,+CAAKwB,KAAL,EAAWe,UAAX;QACH;MACJ;;MAED,8CAAKf,KAAL,EAAWgB,aAAX,8DAA2B,KAAKlC,KAAhC,EAAuC+B,QAAvC;MAEA,KAAK/B,KAAL,GAAa+B,QAAb;IACH;;;WACD,gCAAuB;MAEnB,KAAKD,KAAL;IACH;;;WACD,oBAAW;MACP,IAAI,KAAK9B,KAAL,KAAeR,eAAe,CAACG,aAAnC,EAAkD;QAE9C,KAAKc,WAAL,CAAiBjB,eAAe,CAACE,KAAjC;MACH;IACJ;;;WACD,qBAAY;MAERmC,YAAY,CAAC,KAAKF,gBAAN,CAAZ;MACA,KAAKA,gBAAL,GAAwB,IAAxB;;MACA,IAAI,KAAK3B,KAAL,KAAeR,eAAe,CAACE,KAAnC,EAA0C;QACtC,KAAKyC,iBAAL;MACH;IACJ;;;WACD,kBAAS;MACL,IAAMC,SAAS,GAAG;QACdC,UAAU,EAAE,KAAKnB,KAAL,CAAWmB,UAAX,KAA0B,KADxB;QAEdC,kBAAkB,EAAE,KAAKpB,KAAL,CAAWoB,kBAFjB;QAGdC,iBAAiB,EAAE,KAAKrB,KAAL,CAAWqB,iBAHhB;QAIdC,iBAAiB,EAAE,KAAKtB,KAAL,CAAWsB,iBAJhB;QAOdC,kBAAkB,EAAE,KAAKvB,KAAL,CAAWuB,kBAPjB;QAQdC,QAAQ,EAAE,KAAKxB,KAAL,CAAWwB,QARP;QASdC,QAAQ,EAAE,KAAKzB,KAAL,CAAWyB,QATP;QAUdC,OAAO,EAAE,KAAK1B,KAAL,CAAW0B;MAVN,CAAlB;MAYA,OAAQ,KAAC,UAAD;QAAY,KAAK,EAAE,KAAK1B,KAAL,CAAW2B,cAA9B;QAA8C,oBAAoB,EAE1E,KAAK3B,KAAL,CAAW4B,QAAX,GAAsBC,SAAtB,GAAkC,KAAK1C,oBAF/B;QAEqD,cAAc,EAAE,KAAKJ,cAF1E;QAE0F,OAAO,EAAE,KAAKiB,KAAL,CAAW0B,OAF9G;QAEuH,qBAAqB,EAAE,KAAK1B,KAAL,CAAW8B,qBAFzJ;QAEgL,oBAAoB,EAAE,KAAK9B,KAAL,CAAW+B,oBAFjN;QAEuO,MAAM,EAAE,KAAK/B,KAAL,CAAWgC;MAF1P,GAEsQ,KAAKhC,KAAL,CAAWiC,gBAFjR;QAAA,UAGR,KAAC,QAAD,CAAU,IAAV,kCAAmBf,SAAnB;UAA8B,KAAK,EAAE,KAAKlB,KAAL,CAAWkC,KAAhD;UAAA,UACG,KAAKlC,KAAL,CAAWmC;QADd;MAHQ,GAAR;IAOH;;;;EArLyChE,S;;SAAzBO,gB;AAuLrBA,gBAAgB,CAAC0D,YAAjB,GAAgC;EAC5B5B,cAAc,EAAE,GADY;EAE5ByB,gBAAgB,EAAE;IACdI,WAAW,EAAE;EADC;AAFU,CAAhC"},"metadata":{},"sourceType":"module"}